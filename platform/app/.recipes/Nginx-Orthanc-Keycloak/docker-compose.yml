services:
  ohif_viewer:
    build:
      context: ./../../../../
      dockerfile: ./platform/app/.recipes/Nginx-Orthanc-Keycloak/dockerfile
    image: webapp:latest
    container_name: webapp
    ports:
      - '443:443' # SSL
      - '80:80' # Web
    restart: on-failure
    networks:
      - default
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      - OAUTH2_PROXY_SKIP_PROVIDER_BUTTON=true

  orthanc:
     image: jodogne/orthanc-plugins
     hostname: orthanc
     container_name: orthanc
     volumes:
       - ./config/orthanc.json:/etc/orthanc/orthanc.json:ro
       - ./volumes/orthanc-db/:/var/lib/orthanc/db/
     restart: unless-stopped
     networks:
       - default

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    command: 'start-dev --import-realm'
    hostname: keycloak
    container_name: keycloak
    volumes:
      - ./config/ohif-keycloak-realm.json:/opt/keycloak/data/import/ohif-keycloak-realm.json
    environment:
      # Database
      KC_DB_URL_HOST: postgres
      KC_DB: postgres
      KC_DB_URL: 'jdbc:postgresql://postgres:5432/keycloak'
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME_ADMIN_URL: http://127.0.0.1/keycloak/
      KC_HOSTNAME_URL: http://127.0.0.1/keycloak/
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KEYCLOAK_JDBC_PARAMS: connectTimeout=40000
      KC_LOG_LEVEL: INFO
      KC_HOSTNAME_DEBUG: true
      # added later
      PROXY_ADDRESS_FORWARDING: true
    ports:
      - 8080:8080
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - default
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:15
    hostname: postgres
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    networks:
      - default

volumes:
  postgres_data:
    driver: local

networks:
  default:
    driver: bridge
